type: recipe
format_version: 1
maintainers: [dorotat]
logger: dllogger
labels:
  origin: bionemo
key_segments:
  domain: domain
  config_name: config
  config_path: False
  default_overwrites: False
  extra_overwrites: False
  warmup: 0
launchers:
  type:slurm:
    ntasks_per_node: '{gpus}'
  name:dgxa100_dracooci:
    mounts:
      /workspace/bionemo/models: /lustre/fsw/portfolios/convai/projects/convai_bionemo_training/jet/models
      /workspace/bionemo/examples/tests/test_data/diffdock_data: /lustre/fsw/portfolios/healthcareeng/projects/healthcareeng_bionemo/jet/data/test_data/molecule/diffdock
spec:
  build: bionemo
  scope: train_score
  platforms: [linux/amd64]
  BIONEMO_HOME: "/workspace/bionemo"
  NGC_CLI_FORMAT_TYPE: ascii
  NGC_CLI_ORG: nvidian
  NGC_CLI_TEAM: clara-lifesciences
  config_path: "examples/molecule/diffdock/conf/"
  warmup: 0
  default_overwrites: "++exp_manager.create_wandb_logger=False ++exp_manager.exp_dir=/tmp/nemo_experiments/ ++create_trainer_metric_callback=True"
  extra_overwrites: ""
  script: |-
    cd {BIONEMO_HOME}
    if [ "$SLURM_LOCALID" = "0" ]; then
      cp /workspace/bionemo/examples/tests/test_data/diffdock_data/misc_data/npz/.*.npz /workspace/bionemo/bionemo/model/molecule/diffdock/
    fi
    if [[ {variant} == "train_score" ]]; then
      python examples/{domain}/{model}/train.py --config-path {BIONEMO_HOME}/{config_path} --config-name train_score \
      trainer.num_nodes={nodes} trainer.devices={gpus} trainer.precision={precision} \
      trainer.max_epochs=2 \
      model.micro_batch_size={batch_size} data.num_workers=1 \
      data.cache_path=/workspace/bionemo/examples/tests/test_data/diffdock_data/data_cache \
      data.split_train=/workspace/bionemo/examples/tests/test_data/diffdock_data/splits/split_train \
      data.split_val=/workspace/bionemo/examples/tests/test_data/diffdock_data/splits/split_train \
      data.split_test=/workspace/bionemo/examples/tests/test_data/diffdock_data/splits/split_train \
      {default_overwrites} {extra_overwrites} \
      ++trainer_metric_callback_kwargs.log_path={assets_dir} \
      ++dllogger_callbacks_kwargs.use_existing_dllogger=True ++dllogger_callbacks_kwargs.warmup={warmup} \
      ++dllogger_callbacks_kwargs.json_file={dllogger_file} ++logs_dir={logs_dir}
    elif [[ {variant} == "train_confidence" ]]; then
      python examples/{domain}/{model}/train.py --config-path {BIONEMO_HOME}/{config_path} --config-name train_confidence \
      trainer.num_nodes={nodes} trainer.devices={gpus} trainer.precision={precision} \
      trainer.max_epochs=2 \
      model.micro_batch_size={batch_size} data.num_workers=1 \
      data.cache_path=/workspace/bionemo/examples/tests/test_data/diffdock_data/data_cache \
      data.split_train=/workspace/bionemo/examples/tests/test_data/diffdock_data/splits/split_train \
      data.split_val=/workspace/bionemo/examples/tests/test_data/diffdock_data/splits/split_train \
      data.split_test=/workspace/bionemo/examples/tests/test_data/diffdock_data/splits/split_train \
      {default_overwrites} {extra_overwrites} \
      ++trainer_metric_callback_kwargs.log_path={assets_dir} \
      ++dllogger_callbacks_kwargs.use_existing_dllogger=True ++dllogger_callbacks_kwargs.warmup={warmup} \
      ++dllogger_callbacks_kwargs.json_file={dllogger_file} ++logs_dir={logs_dir}
    elif [[ {variant} == "preprocess_embedding" ]]; then
      if [[ {gpus} -eq "1" ]]; then
        python examples/{domain}/{model}/train.py --config-path {BIONEMO_HOME}/{config_path} --config-name train_score \
        do_embedding_preprocessing=True do_preprocessing=False do_training=False \
        protein_data.protein_data_dir=/workspace/bionemo/examples/tests/test_data/diffdock_data/preprocessing_test/posebusters_benchmark_subset \
        protein_data.protein_ligand_csv=/workspace/bionemo/examples/tests/test_data/diffdock_data/preprocessing_test/protein_ligand.csv \
        {extra_overwrites} \
        ++dllogger_callbacks_kwargs.use_existing_dllogger=True ++dllogger_callbacks_kwargs.warmup={warmup} \
        ++dllogger_callbacks_kwargs.json_file={dllogger_file} ++logs_dir={logs_dir}
      fi
    elif [[ {variant} == "preprocess_score" ]]; then
      if [[ {gpus} -eq "1" ]]; then
        python examples/{domain}/{model}/train.py --config-path {BIONEMO_HOME}/{config_path} --config-name train_score \
        do_embedding_preprocessing=False do_preprocessing=True do_training=False \
        data.cache_path=/tmp/nemo_experiments \
        data.split_train=/workspace/bionemo/examples/tests/test_data/diffdock_data/preprocessing_test/train_split \
        data.split_val=/workspace/bionemo/examples/tests/test_data/diffdock_data/preprocessing_test/train_split \
        data.split_test=/workspace/bionemo/examples/tests/test_data/diffdock_data/preprocessing_test/train_split \
        protein_data.protein_data_dir=/workspace/bionemo/examples/tests/test_data/diffdock_data/preprocessing_test/posebusters_benchmark_subset \
        protein_data.protein_ligand_csv=/workspace/bionemo/examples/tests/test_data/diffdock_data/preprocessing_test/protein_ligand.csv \
        protein_data.output_fasta_file=/workspace/bionemo/examples/tests/test_data/diffdock_data/preprocessing_test/ref/pdb_sequences.fasta \
        protein_data.esm_embeddings_path=/workspace/bionemo/examples/tests/test_data/diffdock_data/preprocessing_test/ref/esm2_embeddings \
        data.num_workers=1 \
        ++model.train_ds.min_num_shards=64 \
        ++model.val_ds.min_num_shards=64 \
        ++model.test_ds.min_num_shards=64
      fi
    elif [[ {variant} == "preprocess_confidence" ]]; then
      if [[ {gpus} -eq "1" ]]; then
        python examples/{domain}/{model}/train.py --config-path {BIONEMO_HOME}/{config_path} --config-name train_confidence \
        do_embedding_preprocessing=False do_preprocessing=True do_training=False \
        data.cache_path=/tmp/nemo_experiments \
        data.split_train=/workspace/bionemo/examples/tests/test_data/diffdock_data/preprocessing_test/train_split \
        data.split_val=/workspace/bionemo/examples/tests/test_data/diffdock_data/preprocessing_test/train_split \
        data.split_test=/workspace/bionemo/examples/tests/test_data/diffdock_data/preprocessing_test/train_split \
        protein_data.protein_data_dir=/workspace/bionemo/examples/tests/test_data/diffdock_data/preprocessing_test/posebusters_benchmark_subset \
        protein_data.protein_ligand_csv=/workspace/bionemo/examples/tests/test_data/diffdock_data/preprocessing_test/protein_ligand.csv \
        protein_data.output_fasta_file=/workspace/bionemo/examples/tests/test_data/diffdock_data/preprocessing_test/ref/pdb_sequences.fasta \
        protein_data.esm_embeddings_path=/workspace/bionemo/examples/tests/test_data/diffdock_data/preprocessing_test/ref/esm2_embeddings \
        data.num_workers=1 \
        ++score_infer.data.cache_path=/workspace/bionemo/examples/tests/test_data/diffdock_data/preprocessing_test/ref/data_cache \
        ++score_infer.data.split_train=/workspace/bionemo/examples/tests/test_data/diffdock_data/preprocessing_test/train_split \
        ++score_infer.data.split_val=/workspace/bionemo/examples/tests/test_data/diffdock_data/preprocessing_test/train_split \
        ++score_infer.data.split_test=/workspace/bionemo/examples/tests/test_data/diffdock_data/preprocessing_test/train_split \
        ++model.train_ds.min_num_shards=64 \
        ++model.val_ds.min_num_shards=64 \
        ++model.test_ds.min_num_shards=64
      fi
    fi
  time_limit: 1800
  artifacts: {}
metrics:
  throughput_train:
    goal: maximize
    tags: [primary]
tests_spec:
  - logic_type: static
    logic_spec:
      exit_codes:
        - 0
products:
  - nodes: [1]
    gpus: [1, 2]
    precision: [32]
    domain: [ molecule ]
    batch_size: [ 10 ]
    model: [ diffdock ]
    variant: [ train_score, train_confidence, preprocess_embedding, preprocess_score, preprocess_confidence ]
    config_name: [train_score]
