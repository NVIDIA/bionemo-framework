type: recipe
format_version: 1
maintainers: [dorotat]
logger: dllogger
labels:
  origin: bionemo
key_segments:
  domain: domain
  config_name: config
  kalignu: kalignu
  warmup: 0
  config_path: False
  default_overwrites: False
  extra_overwrites: False
launchers:
  type:slurm:
    ntasks_per_node: '{gpus}'
spec:
  build: bionemo
  scope: perf-train
  platforms: [linux/amd64]
  BIONEMO_HOME: "/workspace/bionemo"
  NGC_CLI_FORMAT_TYPE: ascii
  NGC_CLI_ORG: nvidian
  NGC_CLI_TEAM: clara-lifesciences
  config_path: "examples/tests/conf/"
  kalignu: None
  warmup: 0
  default_overwrites: "++exp_manager.create_wandb_logger=False ++exp_manager.create_tensorboard_logger=False ++exp_manager.exp_dir=/tmp/nemo_experiments/ ++exp_manager.create_checkpoint_callback=False ++exp_manager.resume_if_exists=False"
  extra_overwrites: ""
  script: |-
    cd {BIONEMO_HOME}
    export NGC_CLI_ORG={NGC_CLI_ORG} 
    export NGC_CLI_TEAM={NGC_CLI_TEAM} 
    export NGC_CLI_FORMAT_TYPE={NGC_CLI_FORMAT_TYPE} 
    if [ "$SLURM_LOCALID" = "0" ]; then
      source examples/protein/openfold/scripts/download_data_sample.sh;
      if [ "{kalignu}" = "True" ]; then
        bash examples/protein/openfold/scripts/install_third_party.sh;
      fi
      touch .download-finished;
    else
      until [ -f .download-finished ]; do
        sleep 5;
      done
    fi
    python examples/{domain}/{model}/{variant}.py --config-path {BIONEMO_HOME}/{config_path} --config-name {config_name} \
    trainer.num_nodes={nodes} trainer.devices={gpus} trainer.precision={precision} model.micro_batch_size={batch_size} \
    model.num_train_iters=30 trainer.val_check_interval=30 ++trainer.limit_val_batches=1 \
    ++model.data.realign_when_required={kalignu} \
    {default_overwrites} {extra_overwrites} \
    hydra.searchpath=[file://{BIONEMO_HOME}/examples/{domain}/{model}/conf] \
    ++create_dllogger_callbacks=True ++create_trainer_metric_callback=True \
    ++dllogger_callbacks_kwargs.use_existing_dllogger=True ++dllogger_callbacks_kwargs.warmup={warmup} \
    ++dllogger_callbacks_kwargs.json_file={dllogger_file} ++trainer_metric_callback_kwargs.log_path={assets_dir} ++logs_dir={logs_dir}
  time_limit: 3600
  artifacts: {}
  metrics:
    throughput_train:
      goal: maximize
      tags: [primary]
products:
  - nodes: [1]
    gpus: [8]
    precision: [32]
    domain: [ protein ]
    batch_size: [ 1 ]
    model: [ openfold ]
    variant: [ train ]
    config_name: [openfold_initial_training_test]
    kalignu: [False, True]