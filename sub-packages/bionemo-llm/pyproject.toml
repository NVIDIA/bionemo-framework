[project]
name = "bionemo-llm"
version = "2.0.0"
license.file = "LICENSE"
readme = "README.md"
description = "BioNeMo Large Language Model Components using NeMo and Megatron"
authors = [
    { name = "John St. John", email = "jstjohn@nvidia.com" },
    { name = "Malcolm Greaves", email = "mgreaves@nvidia.com" },
]
dependencies = [
    # internal
    "bionemo-core",
    # external
    "lightning>=2.2.1",
    "pytorch-lightning>=2.2.1",
    "megatron-core @ git+https://github.com/NVIDIA/Megatron-LM.git@c7a1f82d761577e6ca0338d3521eac82f2aa0904",
    "nemo-toolkit @ git+https://github.com/NVIDIA/NeMo.git@d28c1b2dd7c8539299a4c31f7c8d1678e2cbb9c8",
#    $ time rye sync
#    Reusing already existing virtualenv
#    Generating production lockfile: /Users/mgreaves/dev/oss/nvidia/bionemo-fw-ea/requirements.lock
#    error: Failed to download and build: `apex @ git+https://github.com/NVIDIA/apex.git@810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c`
#      Caused by: Build backend failed to determine extra requires with `build_wheel()` with exit status: 1
#    --- stdout:
#
#    --- stderr:
#    Traceback (most recent call last):
#      File "<string>", line 14, in <module>
#      File "/Users/mgreaves/.cache/uv/builds-v0/.tmprTvkFw/lib/python3.10/site-packages/setuptools/build_meta.py", line 332, in get_requires_for_build_wheel
#        return self._get_build_requires(config_settings, requirements=[])
#      File "/Users/mgreaves/.cache/uv/builds-v0/.tmprTvkFw/lib/python3.10/site-packages/setuptools/build_meta.py", line 302, in _get_build_requires
#        self.run_setup()
#      File "/Users/mgreaves/.cache/uv/builds-v0/.tmprTvkFw/lib/python3.10/site-packages/setuptools/build_meta.py", line 318, in run_setup
#        exec(code, locals())
#      File "<string>", line 10, in <module>
#    ModuleNotFoundError: No module named 'torch'
#    ---
#      Caused by: This error likely indicates that apex @ git+https://github.com/NVIDIA/apex.git@810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c depends on torch, but doesn't declare it as a build dependency. If apex @ git+https://github.com/NVIDIA/apex.git@810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c is a first-party package, consider adding torch to its `build-system.requires`. Otherwise, `uv pip install torch` into the environment and re-run with `--no-build-isolation`.
#    error: could not write production lockfile for workspace
    # TODO: need to get apex to define torch in its pyproject.toml
#    "apex @ git+https://github.com/NVIDIA/apex.git@810ffae374a2b9cb4b5c5e28eaeca7d7998fca0c",
    "transformer_engine @ git+https://github.com/NVIDIA/TransformerEngine.git@7d576ed25266a17a7b651f2c12e8498f67e0baea",
]
requires-python = ">= 3.10"

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.rye]
managed = true

[tool.rye.workspace]
members = ["cdbionemo-core"]

[tool.hatch.metadata]
allow-direct-references = true

[tool.hatch.build.targets.wheel]
packages = ["src/bionemo"]
