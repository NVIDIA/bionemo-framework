# @package _global_
defaults:
  - /base
  - _self_

############################################################
# lepton job info
############################################################
node_group: yo-bom-lepton-001
num_nodes: 1
device_type: gpu
num_devices: 2
gpu_type: h100-sxm
resource_shape: "${device_type}.${num_devices}x${gpu_type}"

############################################################
# recipe identifiers
# mostly used for logging and observability
############################################################
recipe_subdir: geneformer_native_te_mfsdp_fp8
model_type: geneformer

############################################################
# wandb info (total_gpus used for group name)
############################################################
# `total_gpus` calculated from lepton job info above
total_gpus: ${multiply:${num_devices},${num_nodes}}

wandb_init_args:
  project: "test_convergence__recipes__${sanitize:${branch}}"
  group: "${model_type}__${task_cmd}__${total_gpus}__${sanitize:${gpu_type}}"
  job_type: "${recipe_subdir}"
  name: null

############################################################
# task commands
# shared across all products (if not explicitly overridden)
############################################################

# train specific commands
task_cmd: train
num_train_steps: 10

############################################################
# Each product is a different config to run, alongside
# config-specific arguments. Must have a w`andb_name`.
############################################################
products:
  - config: 10m
    wandb_name: "${config}__${now:%Y%m%d-%H%M%S}__${gitsha:}"
  # - config: 106m
  # - config: 4b

############################################################
# run script
# This gets called right after `checkout_script` in the base config.
############################################################
run_script: |
  torchrun ${task_cmd}.py \
    --config-name ${config}.yaml \
    training.num_train_steps=${num_train_steps} \
    wandb_init_args.mode=${wandb_init_args.mode} \
    wandb_init_args.project=${wandb_init_args.project} \
    +wandb_init_args.group=${wandb_init_args.group} \
    +wandb_init_args.job_type=${wandb_init_args.job_type} \
    wandb_init_args.name=${wandb_name}
