name: splice_site_prediction

trainer:
  devices: 1
  num_nodes: 1
  accelerator: gpu
  precision: 16
  logger: False # logger provided by exp_manager
  enable_checkpointing: False
  replace_sampler_ddp: False
  max_epochs: 1000 # PTL default. In practice we don't usually train for more than 1 epoch.
  max_steps: 100000 # consumed_samples = global_step * micro_batch_size * data_parallel_size * accumulate_grad_batches
  log_every_n_steps: 10
  val_check_interval: 100
  limit_val_batches: 50
  limit_test_batches: 500
  accumulate_grad_batches: 1
  gradient_clip_val: 1.0
  benchmark: False

exp_manager:
  name: ${..name}
  exp_dir: ./nemo_experiments/${.name}/${.wandb_logger_kwargs.name}
  explicit_log_dir: ${.exp_dir}
  create_wandb_logger: True
  wandb_logger_kwargs:
    project: ${..name}_finetuning
    name: ${..name}_finetuning
    group: ${..name}
    offline: True
  resume_if_exists: False
  resume_ignore_no_checkpoint: True
  create_checkpoint_callback: True
  checkpoint_callback_params:
    monitor: val_loss
    save_top_k: 10
    mode: min
    always_save_nemo: False # saves nemo file during validation, not implemented for model parallel
    filename: 'dnabert--{val_loss:.2f}-{step}-{consumed_samples}'
    model_parallel_size: ${multiply:${...model.tensor_model_parallel_size}, ${...model.pipeline_model_parallel_size}}

model:
  # model parallelism
  micro_batch_size: 64
  tensor_model_parallel_size: 1
  pipeline_model_parallel_size: 1

  resume_from_checkpoint: null
  seed: 724

  predict: False
  predictions_output_file: null # File where predictions are saved if `predict` is True
  data:
    dataset_path: ??? # root directory for saving memory maps
    train_file: ??? # CSV containing splice sites to use for training
    val_file: null # CSV containing splice sites to use for validation
    test_file: null # CSV containing splice sites to use for testing
    predict_file: null # CSV containing splice sites to use for inference
    fasta_directory: ??? # Directory where reference chromosomes are stored
    fasta_pattern: ??? # Template for reference chromosome filenames: e.g., chr{}.fa will correspond to files: chr1.fa, chr2.fa, ...
    seq_length: ${..seq_length}
    seed: ${..seed}
    dataloader_type: 'single'
    num_workers: 24
  encoder:
    checkpoint: ??? # .nemo file containing the model to start finetuning from
  n_outputs: 3
  hidden_size: 768
  target_name: ???
  seq_length: 400

  optim:
    name: fused_adam
    lr: 2e-5
    weight_decay: 0.01
    betas:
    - 0.9
    - 0.98
    sched:
      name: CosineAnnealing
      warmup_steps: 500
      constant_steps: 50000
      min_lr: 1e-5
