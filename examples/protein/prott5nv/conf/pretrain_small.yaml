defaults:
  - base_config
restore_from_path: null # used when starting from a .nemo file

model:
  tokenizer:
    library: 'sentencepiece'
    type: null
    model: /tokenizers/protein/prott5nv/vocab/protein_sequence_sentencepiece.model
    vocab_file: /tokenizers/vocab/protein_sequence_sentencepiece.vocab
  data:
    # Path to data must be specified by the user.
    data_url: 'https://ftp.uniprot.org/pub/databases/uniprot/uniref/uniref50/uniref50.fasta.gz'
    dataset_path: /data/uniref2022_05 # parent directory for data, contains train / val / test folders. Needs to be writeable for index creation.
    dataset: # inclusive range of data files to load or can load a single file, e.g. x000.csv
      train: x[000..049]
      test: x[000..049]
      val: x[000..049]
    data_impl_kwargs: # currently used only for text_mmap, csv_mmap (should be data_impl dependant)
        newline_int: 10 # byte-value of newline
        header_lines: 1 # skip first N header lines
        workers: null # number of workers when creating missing index files (null defaults to cpu_num // 2)
        sort_dataset_paths: False # if True datasets will be sorted by name
        data_col: 3 # specifies which column in the csv file contains training data, 0-based
        data_sep: ',' # string to split text into columns
    num_workers: 8
  dwnstr_task_validation:
      enabled: True
      dataset:
          class: PerTokenPredictionCallback
          task_type: classification
          infer_target: bionemo.model.protein.prott5nv.infer.ProtT5nvInference
          max_seq_length: ${model.seq_length}
          emb_batch_size: 128
          batch_size: 128
          num_epochs: 10
          shuffle: True
          num_workers: 8
          task_name: secondary_structure
          dataset_path: /data/FLIP/secondary_structure
          dataset:
            train: x000
            test: x000
          sequence_col : "sequence" # name of column with protein sequence in csv file
          labels_col: ["3state", "resolved"] # names of label columns in csv file
          labels_size: [3, 2] # number of classes in each label
          mask_col: ["resolved", null] # names of mask columns in csv file, masks must be 0 or 1
          random_seed: 1234
          optim:
              name: adam
              lr: 0.0001
              betas:
                - 0.9
                - 0.999
              eps: 1e-8
              weight_decay: 0.01
              sched:
                name: WarmupAnnealing
                min_lr: 0.00001
                last_epoch: -1
                warmup_ratio: 0.01
                max_steps: 1000
