name: "BioNeMo Recipes CI"

on:
  push:
    branches:
      - "pull-request/[0-9]+"
      - "dependabot/**"
  merge_group:
    types: [checks_requested]
  schedule:
    - cron: "0 9 * * *" # Runs at 9 AM UTC daily (2 AM MST)

defaults:
  run:
    shell: bash -x -e -u -o pipefail {0}

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  changed-dirs:
    runs-on: ubuntu-latest
    outputs:
      any_changed: ${{ steps.changed-files.outputs.any_changed }}
      all_changed_files: ${{ steps.changed-files.outputs.all_changed_files }}
      dirs: ${{ steps.set-dirs.outputs.dirs }}

    steps:
      - id: get-pr-info
        if: ${{ startsWith(github.ref_name, 'pull-request/') }}
        uses: nv-gha-runners/get-pr-info@main

      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get changed files
        id: changed-files
        uses: step-security/changed-files@v46
        with:
          json: true
          matrix: true
          base_sha: main
          dir_names: true
          dir_names_max_depth: 2
          files: |
            models/**
            recipes/**

      - id: set-dirs
        name: Determine which directories to run
        env:
          EVENT_NAME: ${{ github.event_name }}
          PR_INFO: ${{ steps.get-pr-info.outputs.pr-info }}
          CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          # Get all recipe and model directories
          ALL_DIRS=$(ls -d recipes/*/ models/*/ 2>/dev/null | jq -R -s -c 'split("\n")[:-1] | map(rtrimstr("/"))')

          # Determine which directories to run: all for schedule, filtered for other events
          if [[ "$EVENT_NAME" == "schedule" ]]; then
            DIRS=$(echo "$ALL_DIRS")
          else
            # Check if INCLUDE_ALL_RECIPES label is present
            HAS_INCLUDE_ALL_LABEL=false
            if [[ "$PR_INFO" != "null" && "$PR_INFO" != "" ]]; then
              if echo "$PR_INFO" | jq -e '.labels[]? | select(.name == "INCLUDE_ALL_RECIPES")' > /dev/null 2>&1; then
                HAS_INCLUDE_ALL_LABEL=true
                echo "Found INCLUDE_ALL_RECIPES label - running all directories"
              fi
            fi

            if [[ "$HAS_INCLUDE_ALL_LABEL" == "true" ]]; then
              DIRS=$(echo "$ALL_DIRS")
            else
              # Filter directories to only those that have changed files
              DIRS=$(echo "$ALL_DIRS" | jq -c --argjson changed "$CHANGED_FILES" '
                map(select(. as $dir | $changed | index($dir) != null))
              ')
            fi
          fi

          echo "dirs=$DIRS" >> $GITHUB_OUTPUT
      - name: Show output
        run: |
          echo '${{ toJSON(steps.changed-files.outputs) }}'
          echo '${{ toJSON(steps.set-dirs.outputs) }}'
        shell: bash

  unit-tests:
    needs: changed-dirs
    runs-on: linux-amd64-gpu-l4-latest-1
    if: ${{ needs.changed-dirs.outputs.dirs != '[]' }}

    steps:
      - name: Setup proxy cache
        uses: nv-gha-runners/setup-proxy-cache@main
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Run tests
        run: ./ci/recipes_local_test.py ${{ fromJson(needs.changed-dirs.outputs.dirs) }}

  verify-recipe-tests:
    # This job checks the status of the unit-tests matrix and fails if any matrix job failed or was cancelled.
    # Use this job as the required check for PRs.
    needs: unit-tests
    runs-on: ubuntu-latest
    if: always()
    steps:
      - name: Check unit-tests matrix status
        run: |
          if [[ "${{ needs.unit-tests.result }}" == "failure" || "${{ needs.unit-tests.result }}" == "cancelled" ]]; then
            echo "Some unit-tests matrix jobs have failed or been cancelled!"
            exit 1
          else
            echo "All unit-tests matrix jobs have completed successfully or were skipped!"
            exit 0
          fi
